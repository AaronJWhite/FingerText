changelog (for developers only, include unreleased versions)

0.5.31
- Fixed: freeze when closing npp immediately after upgrade 
****** Added: dynamic hotspot (eva)
- Changed: Snippets can be triggered after period

0.5.30
- parameter insertion handle multi identical hotspots correctly
- snippetdock states remember previous state

0.5.29
- restructure the project folder structure
- add static dialog for debug purpose
- hotspots can be instantly replaced by parameters passed to the triggertext

0.5.28
- Changed: change hotspot (cmd) to (run)
- Fixed: the problem of appending cmd /c will break some commands
- Fixed: Lang:PHP not working
- upgrade to sqlite3.7.7.1

0.5.27
- Changed: merge in jvdanilo's implementation of executecommand

0.5.26
- upgrade to sqlite3.7.6.3

0.5.25
****** Added: private snippet available, any snippet with triggertext beginning with _ cannot be triggered and will not be shown in liveupdate. But you can still see them in editMode and they can be triggered by chain snippets
- snippet triggertext completion are default to be non-inclusive
- Big performance improvement by using direct scintilla method
- Fixed: Buffer changed triggered events (like updateMode) not triggering when use attempt to close npp and cancel afterwards
- turn off live update when selection is rectangle to prevent freeze when selecting multiple line and type
- Change default snippet list length to 1000 to temporarily deal with the problem caused by snippetlistlength limit
- Changed: conflict suffix is now added to the old snippet instead of new snippet
- Added: option to force multipasting or not

0.5.24
- restructure the version text and about text
- restructure initialization of plugin. Include not rewriting the whole settings file everytime fingertext is initialized for faster notepad++ loading
- Fixed: Alert message show up when a tab key is restored

0.5.23
- bump version to fix the problem that I leave testing option open in 0.5.22

0.5.22
****** Added: Messagebox hotspot (msg)
- Changed: default chain limit to 40

0.5.21
- Changed: New snippet editor
- Added: Can go forward (right arrow) or backward(left arrow) when cycling through option hotspot, tab to choose option
- Added: Import and export action will show waiting cursor
- Fixed: potential memory leakage problem cause by the quick fix in 0.5.20
- Fixed: Fingertext freeze if there are incomplete closing hotspot brankets
- Fixed: better checking for the end of option hotspot

0.5.20
- Changed: All hotspots, normal or dynamic are triggered under the same rule, from inside to outside and from left to right.
- Fixed: tab_tag_completion is not working

0.5.18
- generalize cleanupstring for future use

0.5.17
- slight performance increase in snippet live update
- undo process will not cause snippet hint to update
- do not turn off option when language change

0.5.16
****** Primitive implementation of Option Dynamic Hotspot
****** Added: keyword SCOPE:
****** CUT: and GET: will get all when no parameter is passed or search fail
****** CUTALL and GETALL is deleted
- fixed a critical bug of snippetdock not showing snippets with ext and filename scope
- fixed bug of not endundoaction in snippet editor mode
- improve performance of hotspot checking, and snippet live update with long tag
- snippethint not updating if the dock is invisible, and update everytime it's shown.
- A little bit improvement in snippet live update memory leakage, but still a problem

0.5.15
****** Added GETALL , GETLINE, CUTALL, CUTLINE
- Fixed: extra newline in tempfile. just open tempfile in binary so that it writes correctly
 
0.5.14
- New keyword DATE and TIME. Which makes the format of datetime output customizable, and substituted the old DATELONG DATESHORT TIMELONG TIMESHORT
- change keyword CAP to UPPER, LOW to LOWER
****** Change in behaviour of GET:, it gets all the text immediately after the script tag and one space before the triggertext
****** Formally add CUT 
****** Added CUT:, GET: GET 
- Clean up code of generating time stamps
- Correct typo in upgrade message

0.5.13.1
- Try to fix selectiontosnippet AGAIN

0.5.13
- Changed: Pop up option of whether to overwrite or keep copies in conflicting snippets
- restructure the importsnippet function
- Fixed: less memory leakage on liveupdate and snippet import
- Fixed: nested normal hotspots not triggering correctly
- Changed: update the setting hints
- Added: export and delete all snippets
- Added: new keyword CAP and LOW

0.5.12
- Added: Primitive implementation of Language based snippets
- Update scintilla.h so that it's compatibile with notepad++ 5.9
- Change the way dynamic snippet work. Now they nested corrected with the rule from left to right and inside to outside.


0.5.11
- Added: User customizable escape character
- Performance improvement in snippet triggering
- Fixed: Snippet export limited by list length
- Added: snippet preview box live update
- Fixed: critical bug when live update is on and a long chain of chinese characters are typed

0.5.10
- Added: Language based snippets (cannot be triggered yet. basic code in the background)
- Added: Custom Scope, a user defined Global scope
- rewriting the triggerTag, snippetComplete and findTagSQLite functions
- edit mode detect full file name before changing mode
- "List of All Snippet" is now on static text

0.5.9
- Added: Option to make triggertext completion less inclusive
- Fixed: bug in importing snippets with different endline characters.
- Fixed: unknown exception and bad allocation in import snippet function
- Added: Close the temp file and Prompt to close the ftb file before import
- Fixed: A temporary fix for cmd line error

0.5.8
- Added: generation of conflict copy instead of overwrite
- Allow for underscore and period in triggertext
- fixed: creating snippet with empty selection sometimes cause freeze
- rearrange notification listening
- Dynamically resize snippet list
- Fixed: Extra space added to the end of snippet everytime a snippet is saved.
- change the wording when no snippets are imported or exported

0.5.7
- performance improvement for live update snippet hint
- fixed: Annotation not shown correctly in editmode
- change keyword GET to GET:
- update quick guide

0.5.6
- remove GETSCRIPT, add a more general keyword GET

0.5.5
- Add GETSCRIPT keyword
- Fixed snippet editor annotation infinite loop bug
- can trigger snippet in edit mode. (but hotspot navigation is not, as it disturb snippet editing, also live update would not be available in edit mode)
- Experimental feature: warmspot
- remove insert dynmaic hotspot menu command.

0.5.4
- combine createsnippet and selectiontosnippet
- Fixed bug of snippetdock not updating when save a file with another extension name

0.5.3.1
- fixed bug of autoscrolling when switch between file
- Multi pasting work for simultaneous hotspots

0.5.3
- Nested (normal) hotspots
- fixed a bug causing hotspot with the same name not triggering correctly

0.5.1
- Fixed (Edit view not activate correctly when the screen is splitted)

0.5.0
- restructure config loading
- Added command for inserting different kinds of hotspots
- Added command to create snippet from selection
- Added command to change settings in config.ini
- SnippetDock items are lining up better
- group files into FingerText folder under config folder

0.4.16
- Add (key)CUT dynamic hotspots
- fixing bug of saving file in programfile folders without admin right
- performance improvment in live search
- fixed tag completion not updating snippetdock hint
- fixed infinite recusion bug in keyword and command hotspot
- the chain snippet is indicated by $[![(cha)]!] instead of $[![(chain)]!] so that different hotspots can line up better.

0.4.15
- add (cmd) dynamic hotpots

0.4.14
- fixed heap corruption bug in edit snippet, getcurrenttag and hotspotnavigation
- fixed many things broken by live search 
- Make permissive tag triggering an option and move it to a cmd "tag completion"
- Add basic (key) and (chain) hotspot

0.4.13.1
- Added indentation reference (very ugly implementation)
- fixed snippetdock toggle bug

0.4.12
- Add live update snippetdock 
- preview showing instructions when no item is selected
- permissive tag triggering
- Order list by tagType (can be configured in ini file)


0.4.11
- important bug fix on snippet with no space
- save button disabled in normal mode


0.4.10
- Case insensitive search. Now extension .c and .C are viewed as the same extension,
- More instructions on the snippetdock
- and TriggerText "NpP" is the same as "nPp"
- Replace help page link by Quick Guide
- Fixed problem of extra endline during repeated exporting and importing
- more messages for snippet save problem

0.4.9
- Fixed problem of not opening the correct snippet in edit mode
- Cmd to enable or disable fingertext
- Better snippet save behaviour


0.4.8
- Snippet Preview Box working (chinese snippet text not supported)
- edit mode and normal mode (all snippets show in the list in edit mode)

0.4.7
- centralize version number

0.4.6
- Use annotation in edit view.

0.4.5
- Use ini config file
- remove the list length text box
- change the list double click behaviour. it trigger edit instead of insert.
- editor use SnippetEditor.ftb as buffer
- can use ctrl-S to save snippet

0.4.4
- Better readme.rdoc

0.4.3
- Implement database export function

0.4.2
- Using the config folder to storage database (should solve the windows 7 admin problem)
- Add import database function (export coming soon)
- The whole plugin become a single dll for easy installation. The sample snippet database can be imported afterwards.

0.4.1
- Fixing the version number problem

0.4.0
- Disabling the debuging testing function.

0.3.11
- Edit instructions for the new sqlite based system

0.3.10
- Double Click insert snippet
- Fixed Filename specific snippet problem

0.3.9
- Implemented Edit and Delete
- Refine snippet CRUD implementation
- Disable buttons when snippet list not in focus

0.3.8
- Add Snippet Dock, implemented snippet list.
- Impletmented Create and save snippet.

0.3.7
- Resume Filename specific snippets under sqlite system.

0.3.6
- Using Sqlite to store snippets instead of using ecusive file system. Snippet CRUD inside notepad++ is not available yet. 

0.3.5:
- Fixed problem after merging caused by incompatibility of two branches (tab key will scroll the page when tag is not found, triggering snippet not at the beginning of the document will clear characters before the tag)
- Closing autocomplete window when snippet is triggered
- Fixing problem of multiple identical hotspots sometimes not simultaneously selected
- Fixed unicode convertion buffer size

0.3.4
- Fixing problem caused after merging (not preserving working folder, chinese snippet not working under UTF-8 document)
- Add version resource file

0.3.3
- Merging the improvement by Dave Brotherstone.

0.3.2
- Fixed the problem of long Hotspot name

0.3.1
- Add more details in usage description.
- edit some typo in sample template
- refactor the tag path part
- fixed possible bug of char array manipulation
- allow for more hotspots
 
0.3.0
- Implemented Snippet set for specific file name.
- The priority is FileName>Ext>Global
- performance improvement to path search

0.2.7
- replace multiple identical hotspots in one undo steps

0.2.6
- Multiple hotspot selection and hotspot hint text replacement works simultaneously

0.2.5
- Add Multiple hotspot selection.
- hotspot hint text replacement disabled temporarily.

0.2.4
- Change in tab navigation behaviour. The hotspot will be replaced by the hint text when using tab navigation


0.2.3
- Add support for chinese character tag name. Can be triggered from either ANSI or Utf-8 document (But chinese name mess up the word selection in the editor so it may not trigger correctly under ANSI document. So English tag names are encouraged.)


0.2.2
- Add Readme and License
- fixed tag longer than snippet problem
- fixed the limited row size problem
- Turn on the undo step squash function which is accidentally turned off in previous version
- Lots of performance improvement changes
- Add basic c++ sample snippets

0.2.0
- Support utf-8 encoding. (All snippets are assumed to be in ANSI, and will be converted if current page is utf-8)
- Fixed long tab problem
- Fixed Spaces or tabspaces before tab problem
- Fixed empty snippet problem

0.1.2
- Emulate tab behaviour when no tag match or selection is rectangle

0.1.1
- Snippet insertion recorded as one single undo step

0.1.0 
- First Alpha verison. Implemented basic tab trigger snippet and hotspot navigation